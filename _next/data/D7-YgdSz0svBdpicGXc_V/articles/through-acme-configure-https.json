{"pageProps":{"articleData":{"markdownContent":"\n1、 安装acme.sh 如下命令：\n\n```rb\ncurl https://get.acme.sh | sh\n```\n为了能在命令行中执行，在.bashrc中配置：\n\n```rb\nalias acme.sh=~/.acme.sh/acme.sh\n```\nsrouce .bashrc一下就可在控制台中查看acme.sh命令了\n\nacme.sh -h 查看帮助\n\n2、生成dhparams在/etc/nginx/ssl目录下：\n\n```rb\nopenssl dhparam -out /etc/nginx/ssl/dhparams.pem 4096\n```\n3、配置nginx可以访问对应域名下的.well-known文件(因为要使对应域名可用)\n比如在/var/html/www下创建一个.well-known文件夹\n\n```rb\nlocation /.well-known {\n  root /var/html/www;\n}\n```\n4、颁发证书\n\n```rb\nacme.sh --issue -w  /var/html/www -d xcx.org -k 4096\n```\n\n5、生成对应的nginx的配置证书\n\n```rb\nacme.sh --install-cert -d xcx.org --key-file /etc/nginx/ssl/xcx/xcx.org.key --fullchain-file /etc/nginx/ssl/xcx/xcx.org.cer --reloadcmd 'service nginx restart'\n```\n6、配置对应的nginx\n\n```rb\nlisten 443 ssl;\nssl_certificate /etc/nginx/ssl/xcx/xcx.org.cer ;\nssl_certificate_key /etc/nginx/ssl/xcx/xcx.org.key;\nssl_session_timeout 30m;\nssl_protocols TLSv1.1 TLSv1.2;\nssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;\nssl_session_cache shared:SSL:10m;\nssl_dhparam /etc/nginx/ssl/dhparams.pem;\nssl_prefer_server_ciphers on;\nadd_header Strict-Transport-Security max-age=31536000;\n```\n\n\n配置参考\n\n```ruby\nupstream talent {\n  server unix:///data/talent/shared/tmp/sockets/puma.sock;\n}\n\nserver {\n  listen       80 default_server;\n  listen 443 ssl;\n  server_name  abc.com;\n  root /data/talent/current/public;\n  index index.html;\n  add_header Access-Control-Allow-Origin *;\n  ssl_prefer_server_ciphers on;\n  ssl_session_timeout 30m;\n  ssl_protocols TLSv1.1 TLSv1.2;\n  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;\n  ssl_session_cache shared:SSL:10m;\n  ssl_prefer_server_ciphers on;\n  add_header Strict-Transport-Security max-age=31536000;\n\n\n  ssl_certificate /etc/nginx/ssl/talent/abc.com.cer;\n  ssl_certificate_key  /etc/nginx/ssl/talent/abc.com.key;\n  ssl_dhparam /etc/nginx/ssl/talent/dhparams.pem;\n  try_files $uri/index.html $uri.html $uri @talent;\n\n  location @talent {\n    proxy_set_header   Host $host;\n    proxy_set_header   X-Forwarded-Host $host;\n    proxy_set_header   X-Forwarded-Server $host;\n    proxy_set_header   X-Real-IP        $remote_addr;\n    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n    proxy_pass         http://talent;\n  }\n\n  location ~ ^/(assets)/ {\n    gzip_static on;\n    expires max;\n    add_header Cache-Control public;\n  }\n  error_page 404 /404.html;\n      location = /400.html {\n  }\n\n  error_page 500 502 503 504 /500.html;\n      location = /500.html {\n  }\n}\n```","title":"通过 acme.sh 配置 https","slug":"through-acme-configure-https","intro":"为了网站安全，我们经常会给我们的域名配置并启用https，使我们的网站更加安全，如今有很多可以自动生成证书的工具，比如：acme.sh、Certbot等，由于经常性的使用，所以写一下使用acme.sh的方法和配置","tags":"ruby, acme.sh, nginx","date":"2020-08-19"}},"__N_SSG":true}